# Задача №39. Решение в группах
# Даны два массива чисел. Требуется вывести те элементы
# первого массива (в том порядке, в каком они идут в первом
# массиве), которых нет во втором массиве. Пользователь вводит
# число N - количество элементов в первом массиве, затем N
# чисел - элементы массива. Затем число M - количество
# элементов во втором массиве. Затем элементы второго массива
# Ввод: Вывод:
# 7 
# 3 1 3 4 2 4 12
# 6
# 4 15 43 1 15 1

# 3 3 2 12 (каждое число вводится с новой строки)


def task39():
    n = int(input("task 39 длинна массива: "))
    arrayOne = list()
    for i in range(n):
        arrayOne.append(int(input(f"число на поз {i}: ")))
        
    m = int(input("task 39 длинна 2 массива: "))
    arrayTwo = list()
    for j in range(m):
        arrayTwo.append(int(input(f"число на поз {j}: ")))
    
    result = list()
    for i in arrayOne:
        for j in arrayTwo:
            if i == j:
                result.append(i)
            
    return result
    
# print(task39())

# lst1 = [random.randint(1,10) for i in range(10)]
# lst2 = [random.randint(1,10) for j in range(5)]
# print(lst1)
# print(lst2)
# ls3 = []
# for i in lst1:
#     if i not in lst2:
#         ls3.append(i)
# print(*ls3)

# Задача №41. Решение в группах
# Дан массив, состоящий из целых чисел. Напишите
# программу, которая в данном массиве определит
# количество элементов, у которых два соседних и, при
# этом, оба соседних элемента меньше данного. Сначала
# вводится число N — количество элементов в массиве
# Далее записаны N чисел — элементы массива. Массив
# состоит из целых чисел.
# 5 -> 1 2 3 4 5 ->0
# 5 -> 1 5 1 5 1 -> 2


def task41():
    n = int(input("task 41 длинна массива: "))
    arrayOne = list()
    for i in range(n):
        arrayOne.append(int(input(f"число на поз {i+1}: ")))
    
    count = 0
    for i in range(1, n-1):
        if  arrayOne[i-1]<arrayOne[i]>arrayOne[i+1]:
            count += 1
    
    return count

# print(task41())
            
    
        
        
# Задача №43. Решение в группах
# Дан список чисел. Посчитайте, сколько в нем пар
# элементов, равных друг другу. Считается, что любые
# два элемента, равные друг другу образуют одну пару,
# которую необходимо посчитать. Вводится список
# чисел. Все числа списка находятся на разных
# строках.
# Ввод: 1 2 3 2 3
# Вывод:2



def task43():
    n = int(input("task 41 длинна массива: "))
    arrayOne = list()
    for i in range(n):
        arrayOne.append(int(input(f"число на поз {i+1}: ")))
    print(arrayOne) 
    count = 0
    for i in range(n):
        for j in range(i+1,n):
            if arrayOne[i] == arrayOne[j]:
                count += 1
    
    return count      
                
    

# print(task43())
        
        
        
# Задача №45. Общее обсуждение
# Два различных натуральных числа n и m называются
# дружественными, если сумма делителей числа n
# (включая 1, но исключая само n) равна числу m и
# наоборот. Например, 220 и 284 – дружественные числа.
# По данному числу k выведите все пары дружественных
# чисел, каждое из которых не превосходит k. Программа
# получает на вход одно натуральное число k, не
# превосходящее 105
# . Программа должна вывести все
# пары дружественных чисел, каждое из которых не
# превосходит k. Пары необходимо выводить по одной в
# строке, разделяя пробелами. Каждая пара должна быть
# выведена только один раз (перестановка чисел новую
# пару не дает).
# Ввод:300 Вывод:220 284


k = int(input())
array = []

for i in range(k): 
    summ = 0
    for j in range(1, i):
        if i % j == 0:
            summ += j
    array.append([i,summ])
        
for i in range(1,len(array)):
    for j in range(i + 1,len(array)):
        b = array[i]
        c = array[j]
        if b[0] == c[1] and b[1] == c[0]:
            print(b)
            